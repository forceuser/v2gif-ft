@keyframes wd {
	0% {
		transform: scale(1.2);
	}
}
@keyframes pump {
	0% {
		transform: rotate(40deg) scale(0.6);
	}

	25% {
		transform: rotate(40deg) scale(0.65);
	}

	35% {
		transform: rotate(40deg) scale(0.5);
	}

	45% {
		transform: rotate(40deg) scale(0.65);
	}

	55% {
		transform: rotate(40deg) scale(0.6);
	}

	100% {
		transform: rotate(40deg) scale(0.6);
	}
}

.input-block,
label[button-block] {
	display: flex;
	margin-bottom: 0.2em;
	user-select: none;
	padding: 20px;
	background: #3a3a3a;
	background: #fff;
	box-shadow: 0 1px 1px #eee;
	transition: all 0.3s ease;

	&:hover {
		background: #444;
		background: #f4f4f4;
	}
}

label {
	font-weight: inherit;

	&:active input:not(:disabled)+box {
		animation: wd 0.5s ease forwards;
	}
}

label[button] {
	margin-bottom: 10px;
}

label[button-block],
label[button] {
	user-select: none;
	display: inline-flex;
	outline: none;
	white-space: nowrap;
	position: relative;

	input[type="checkbox"],
	input[type="radio"] {
		opacity: 0;
		width: 0;
		height: 0;
		left: 0;
		top: 0;
		position: absolute;
		z-index: -1;

		&+box {
			position: relative;
			display: inline-block;
			flex: 0 0 auto;
			vertical-align: middle;
			font-size: var(--checkbox-size);
			width: 1.34em;
			height: 1.34em;
			border: var(--checkbox-border-width) solid;
			transition: all 0.3s ease;

			&:before {
				content: "";
				position: absolute;
				border-radius: inherit;
				left: 0;
				right: 0;
				top: 0;
				bottom: 0;
				opacity: 0;
				transition: all 0.3s ease;
			}

			&:after {
				content: "";
				position: absolute;
				display: block;
				background: currentColor;
				width: 100%;
				height: 100%;
				border: var(--checkbox-line-width) solid;
				transform: scale(0.2);
				opacity: 0;
				color: #aaa;
				transition: all 0.3s ease;
			}
			color: var(--color--primary);
			border-color: fade(black, 20%);
			background: fade(white, 15%);
		}

		&:checked+box {
			border-color: currentColor;
			box-shadow: inset 0 0 0.05em fade(black, 10%);

			&:after {
				color: currentColor;
				transform: scale(0.5);
				opacity: 1;
			}
		}
	}

	&:hover input:not(:disabled)+box,
	input:not(:disabled):focus+box {
		border-color: currentColor;
		box-shadow: inset 0 0 0.05em fade(black, 10%);
	}

	&:hover input:not(:disabled)+box {
		&:after {
			opacity: 1;
		}
	}

	input ~ * {
		cursor: default;
	}

	input:disabled ~ * {
		cursor: not-allowed;
	}

	input+box+span {
		display: inline-block;
		padding: 2px 12px;
		vertical-align: middle;
		white-space: normal;
		margin-left: -4px;
		margin-right: -4px;
	}

	input:focus+box {
		&:before {
			margin: -0.1em;
			border-radius: 100%;
			box-shadow: 0 0 0 0.5em currentColor;
			opacity: 0.3;
			z-index: 0;
		}
	}

	input[type="radio"] {
		&+box {
			border-radius: 100%;

			&:after {
				border-radius: 100%;
			}
		}
	}

	input[type="checkbox"] {
		&+box {
			border-radius: 0.2em;

			&:after {
				border-top: 0;
				border-left: 0;
				background: none;
				left: 22%;
				top: -7%;
				width: 55%;
				transform: rotate(39deg) scale(0.5);
				transition: all 0.2s ease;
			}
		}

		&:checked+box {
			&:after {
				transform: rotate(41deg) scale(0.7);
			}
		}
	}

	input:disabled {
		& + box {
			background: fade(black, 7%);
			color: fade(black, 20%) !important;
			border-color: fade(black, 10%) !important;

			&:after {
				border-color: fade(black, 20%) !important;
			}

			& + span {
				color: fade(black, 30%) !important;
			}
		}
	}

	input.slide.slide.slide {
		& + box {
			width: 2.5em;
			border-radius: 0.7em;

			&:after {
				border: none;
				width: 50%;
				height: auto;
				top: 0;
				bottom: 0;
				background: fade(black, 50%);
				color: inherit;
				border-radius: 100%;
				left: 0.03em;
				opacity: 0.7;
				transform: scale(0.9);
				transition: all 0.3s ease;
			}
		}

		&:not(:disabled) {
			&:focus,
			&:hover {
				& + box {
					&:after {
						background: currentColor;
					}
				}
			}
		}

		&:checked {
			& + box {
				&:after {
					background: currentColor;
					left: 1.06em;
					opacity: 1;
				}
			}
		}

		&:focus+box {
			&:before {
				border-radius: 0.7em;
			}
		}
	}

	&.inversed input {
		&[type="radio"]+box {
			&:after {
				transition: all 0.3s ease, transform 0.15s 0.15s ease;
			}
		}

		&[type="checkbox"]+box {
			&:after {
				transition: all 0.3s ease, transform 0.15s 0.15s ease;
			}
		}

		&,
		&.slide.slide.slide {
			&:checked+box {
				border-color: currentColor;
				background: currentColor;

				&:after {
					color: white;
				}
			}

			&:disabled:checked+box {
				border-color: fade(black, 0%) !important;
				background: fade(black, 20%) !important;

				&:after {
					color: white !important;
				}
			}
		}
	}
}
